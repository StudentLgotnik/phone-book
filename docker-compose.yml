version: "3.9"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    hostname: kafka
    environment:
#     For local run
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1 # docker-machine ip
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  postgresqldb:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=phonebook_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    restart: unless-stopped
  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    restart: unless-stopped
  phonebook_app:
    container_name: springboot_phonebook
#    image: kazzarin99/springboot_phonebook:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
#    For local build
    build:
      context: ./application
    command: -Dspring.profiles.active=prod
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - postgresqldb
      - kafka
    links:
      - kafka
      - postgresqldb
  phonebook_statistics:
    container_name: springboot_phonebook_statistics
#    image: kazzarin99/springboot_phonebook_statistics:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
#    For local build
    build:
      context: ./statistics
    command: -Dspring.profiles.active=prod
    ports:
      - 8081:8081
    restart: unless-stopped
    depends_on:
      - mongodb
      - kafka
    links:
      - kafka
      - mongodb
  phonebook_notification:
    container_name: springboot_phonebook_notification
#    image: kazzarin99/springboot_phonebook_notification:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
#    For local build
    build:
      context: ./notification
    command: -Dspring.profiles.active=prod
    ports:
      - 8082:8082
    restart: unless-stopped
    depends_on:
      - kafka
    links:
      - kafka
  phonebook_user_service:
    container_name: springboot_phonebook_user_service
#    image: kazzarin99/springboot_phonebook_user_service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    #    For local build
    build:
      context: ./userservice
    command: -Dspring.profiles.active=prod
    ports:
      - 8083:8083
    restart: unless-stopped
    depends_on:
      - postgresqldb
      - kafka
    links:
      - kafka
      - postgresqldb
